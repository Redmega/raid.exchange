create table "public"."lobby" (
    "id" bigint generated by default as identity not null,
    "slug" text not null,
    "host_id" uuid,
    "pokemon_name" text,
    "stars" smallint not null,
    "description" text,
    "rewards" jsonb,
    "repeat" boolean not null default false,
    "code" text,
    "created_at" timestamp with time zone default now()
);


alter table "public"."lobby" enable row level security;

create table "public"."lobby_users" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "lobby_id" bigint not null,
    "user_id" uuid not null
);


alter table "public"."lobby_users" enable row level security;

CREATE UNIQUE INDEX lobby_pkey ON public.lobby USING btree (id);

CREATE UNIQUE INDEX lobby_users_pkey ON public.lobby_users USING btree (id);

alter table "public"."lobby" add constraint "lobby_pkey" PRIMARY KEY using index "lobby_pkey";

alter table "public"."lobby_users" add constraint "lobby_users_pkey" PRIMARY KEY using index "lobby_users_pkey";

alter table "public"."lobby" add constraint "lobby_host_id_fkey" FOREIGN KEY (host_id) REFERENCES auth.users(id) not valid;

alter table "public"."lobby" validate constraint "lobby_host_id_fkey";

alter table "public"."lobby_users" add constraint "lobby_users_lobby_id_fkey" FOREIGN KEY (lobby_id) REFERENCES lobby(id) not valid;

alter table "public"."lobby_users" validate constraint "lobby_users_lobby_id_fkey";

alter table "public"."lobby_users" add constraint "lobby_users_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."lobby_users" validate constraint "lobby_users_user_id_fkey";

create policy "Enable insert for authenticated users only"
on "public"."lobby"
as permissive
for insert
to authenticated
with check (true);



